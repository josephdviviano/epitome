#!/usr/bin/env python
"""
Takes input NIFTI and returns a single time series that explains the
maximum variance across the entire brain. Requires a ROI mask.

Based on: Behzadi, Y. 2007. A Component Based Noise Correction Method (CompCor)
for BOLD and Perfusion Based fMRI. Neuroimage 37(1).
"""
import os, sys
import scipy as sp
import numpy as np
import ninet as nn

def main(data, mask, output, n):
    """
    Takes an input NIFTI and brain mask to produce a PC component time series 
    that explains the most variance in the data.

    This will mean-centre and variance normalize each time series before
    estimating number of PCs per feature (voxel).

    This might be a useful regressor for cleaning up resting-state data.
    """
    data, _, _, _ = nn.utilities.loadnii(data)
    mask, _, _, _ = nn.utilities.loadnii(mask)
    data, idx = nn.utilities.maskdata(data, mask)

    data -= np.mean(data, 1)[:, None]  # mean center
    data /= np.std(data, 1)[:, None]   # variance normalize

    # retrieve the top component and save to an afni-compatible 1D file
    components, exp_var = nn.stats.pca_reduce(data.T, n=n, copy=True, whiten=True)
    np.savetxt(output, components, fmt='%10.12f')

if __name__ == '__main__':
    data = str(sys.argv[1])
    mask = str(sys.argv[2])
    output = str(sys.argv[3])
    n = int(sys.argv[4])

    main(data, mask, output, n)